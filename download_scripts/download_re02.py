import os
import sys

if not os.path.exists(os.path.join(os.getcwd(), "cp")):
    print("Oh no, you are not in the 02002students folder.")
    print("Please open the 02002students folder in VS code and run the script again.")
    sys.exit(1) # Exit with error code 1

try:
    import unitgrade # type: ignore
    import dtumathtools # type: ignore
except ImportError as e:
    print("Oh no, Python encountered a problem during importing unitgrade")
    print("This means that your current python has never had the cp package installed.")
    print("Please select a different Python through the Command Palette (Ctrl+Shift+P) and choose ""Python: Select Interpreter"".")
    print("Try all the Pythons you can choose and run the script from them")
    print("")
    print("If you have not yet followed step 5 of the installation instructions from week 1 please do so now. Here is a link:")
    print("https://cp.compute.dtu.dk/installation/installation.html#step-5-install-the-course-toolbox-and-software-packages")
    sys.exit(1) # Exit with error code 1
try:
    import cp.ex00 # type: ignore
except ImportError as e:
    print("Oh no, Python encountered a problem during importing cp.") 
    import site
    for site_path in site.getsitepackages():
        egg_path = os.path.join(site_path, "cp.egg-link")
        if os.path.exists(egg_path):
            with open(egg_path, "r") as f:
                print("It tried looking in the following folder, but could not find the cp package there:")
                print(f.read())
    print("")
    print("This most likely means that you have moved or renamed the 02002students folder since following step 5 of the installation guide.")
    print("Please move/rename the students folder back so it can be found at the this path again")
    print("If you have tried running the script with EVERY Python interpreter, and this does still not work, make sure you have followed the installation instructions from week 1. Here is a link:")
    print("https://cp.compute.dtu.dk/installation/installation.html#step-5-install-the-course-toolbox-and-software-packages")
    sys.exit(1) # Exit with error code 1

cp_path = os.path.dirname(cp.__file__)

print("cp folder located at", cp_path)
assert "02002public" not in cp_path, "Probably running on the lecturer's computer, don't do that."

import base64
import io
import zipfile

# Replace this with your base64-encoded string


def add_new_files(encoded_zip_data):
    # Decode the base64 string to binary data
    zip_binary_data = base64.b64decode(encoded_zip_data)

    # Create an in-memory file-like object from the binary data
    zip_file_like = io.BytesIO(zip_binary_data)

    # You can now work with the zip file in memory
    with zipfile.ZipFile(zip_file_like, 'r') as zip_file:
        
        # Iterate over the file list
        for file in zip_file.namelist():
            if file == '.gitignore' or file.endswith('/'):
                continue
            assert file.startswith('cp/'), file

            # Extract the file from the zip archive (for example, the first file)
            file_content = zip_file.read(file)
            out_path = os.path.join(cp_path, file[3:])

            # Make sure we don't overwrite files that are already there, except for tests
            if (not os.path.exists(out_path)) or (file.startswith('cp/tests/')) or (file.startswith('cp/project')):
                os.makedirs(os.path.dirname(out_path), exist_ok=True)

                # Check if the file is already up to date
                if (os.path.exists(out_path)):
                    with open(out_path, "rb") as existing_file:
                        # Replace Windows line endings with Unix line endings
                        existing_content = existing_file.read().replace(b'\r\n', b'\n')
                    if existing_content == file_content:
                        continue
                # Write the file to disk
                with open(out_path, 'wb') as f:
                    f.write(file_content)
                    print("Writing to", out_path)

    # We don't need the binary data anymore, and close the in-memory file-like object
    zip_file_like.close()
    print("Files are up to date")
    print()
    print("Successfully completed!")

# Run the function on the base64-encoded version of the zip file
add_new_files("""""")